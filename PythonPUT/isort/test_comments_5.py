# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import comments as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    str_0 = "=x'yxsEuv.+"
    str_1 = module_0.add_to_line(none_type_0, str_0, comment_prefix=str_0)
    assert str_1 == "=x'yxsEuv.+"
    none_type_1 = None
    str_2 = "Kw@'#t&"
    tuple_0 = module_0.parse(str_2)
    module_0.parse(none_type_1)


def test_case_1():
    str_0 = "3ay\"s|,63XN'E"
    tuple_0 = module_0.parse(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    str_0 = "\r2?,SP>t<::,WXK\t"
    list_0 = [str_0, str_0, str_0]
    str_1 = '71\'LZ~x@""x"7]0'
    str_2 = module_0.add_to_line(list_0, str_1, str_1)
    assert str_2 == '71\'LZ~x@""x"7]0'
    module_0.parse(bool_0)


def test_case_3():
    str_0 = "PoR\rXgqf\x0bZIQ{-3Sf'KS"
    str_1 = module_0.add_to_line(str_0)
    assert str_1 == " P; o; R; \r; X; g; q; f; \x0b; Z; I; Q; {; -; 3; S; '; K"


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    str_0 = module_0.add_to_line(none_type_0, none_type_0, none_type_0, none_type_0)
    module_0.parse(none_type_0)
