# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import comments as module_0


def test_case_0():
    str_0 = 'o"\t^AB'
    list_0 = [str_0]
    bool_0 = True
    str_1 = module_0.add_to_line(list_0, removed=bool_0)
    assert str_1 == ""
    str_2 = "A0II8dD\nctq_Ts[W\r$E?"
    tuple_0 = module_0.parse(str_2)
    tuple_1 = module_0.parse(str_2)
    str_3 = "G#VZ\x0b4Yn\x0c|w("
    tuple_2 = module_0.parse(str_3)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "<Xx+c0.a%W}X.R`N"
    str_1 = "LD!RWy}kDt;(f4"
    str_2 = "X4[.)mTv!QP<@)"
    tuple_0 = module_0.parse(str_0)
    list_0 = [str_1, str_2, str_2]
    none_type_0 = None
    bool_0 = False
    module_0.add_to_line(list_0, none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = 1552.22 - 797.98j
    bool_0 = False
    module_0.add_to_line(complex_0, removed=bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -25
    module_0.parse(int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    str_0 = "o>g+o5/;2k<4Y' 8"
    str_1 = module_0.add_to_line(none_type_0, comment_prefix=str_0)
    assert str_1 == ""
    str_2 = "`mb[cEG%\tJdpt^cP"
    str_3 = module_0.add_to_line(none_type_0, str_2, comment_prefix=str_2)
    assert str_3 == "`mb[cEG%\tJdpt^cP"
    none_type_1 = None
    module_0.parse(none_type_1)
