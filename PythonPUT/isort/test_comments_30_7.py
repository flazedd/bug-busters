# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import comments as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    str_0 = module_0.add_to_line(none_type_0)
    assert str_0 == ""
    str_1 = "b/y*w"
    str_2 = module_0.add_to_line(none_type_0, removed=none_type_0, comment_prefix=str_1)
    assert str_2 == ""
    str_3 = module_0.add_to_line(str_1, str_1)
    assert str_3 == "b/y*w b; /; y; *; w"
    str_4 = "UAXMC|#if+9_"
    tuple_0 = module_0.parse(str_4)
    str_5 = "T"
    str_6 = module_0.add_to_line(str_5, str_5, comment_prefix=str_5)
    assert str_6 == "TT T"
    tuple_1 = module_0.parse(str_5)


def test_case_1():
    object_0 = module_1.object()
    bool_0 = True
    str_0 = module_0.add_to_line(object_0, removed=bool_0, comment_prefix=object_0)
    assert str_0 == ""


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "X6"
    dict_0 = {str_0: str_0, str_0: str_0}
    tuple_0 = (dict_0,)
    module_0.add_to_line(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.parse(object_0)


def test_case_4():
    str_0 = ""
    str_1 = "uU,2&qZxL{>uKe"
    str_2 = module_0.add_to_line(str_1)
    assert str_2 == " u; U; ,; 2; &; q; Z; x; L; {; >; K; e"
    tuple_0 = module_0.parse(str_1)
    tuple_1 = module_0.parse(str_2)
    str_3 = module_0.add_to_line(str_0)
    assert str_3 == ""
