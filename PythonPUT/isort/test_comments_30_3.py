# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import comments as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "1>=TSF"
    tuple_0 = module_0.parse(str_0)
    str_1 = "x\x0cJ0V"
    tuple_1 = module_0.parse(str_1)
    tuple_2 = module_0.parse(str_1)
    tuple_3 = module_0.parse(str_1)
    str_2 = "vi#"
    tuple_4 = module_0.parse(str_2)
    str_3 = "D_Dh"
    tuple_5 = module_0.parse(str_3)
    none_type_0 = None
    str_4 = module_0.add_to_line(none_type_0, none_type_0, none_type_0)
    module_0.parse(none_type_0)


def test_case_1():
    none_type_0 = None
    str_0 = "\\c2],\t@"
    tuple_0 = module_0.parse(str_0)
    str_1 = module_0.add_to_line(none_type_0)
    assert str_1 == ""


def test_case_2():
    str_0 = "L"
    str_1 = '\tpf"yV;$_DuL&qP@'
    list_0 = [str_0, str_1]
    str_2 = module_0.add_to_line(list_0, removed=list_0)
    assert str_2 == ""


def test_case_3():
    none_type_0 = None
    str_0 = module_0.add_to_line(none_type_0)
    assert str_0 == ""


def test_case_4():
    str_0 = "hM`F/EtJ\n>T9v"
    str_1 = "&:J"
    str_2 = '";; iV-e:'
    list_0 = [str_0, str_1, str_2]
    str_3 = module_0.add_to_line(list_0)
    assert str_3 == ' hM`F/EtJ\n>T9v; &:J; ";; iV-e:'
    str_4 = "46(!;8^?2Q'\x0cOW;G:;vC"
    str_5 = "5M`\t<y"
    list_1 = [str_5, str_5, str_4]
    str_6 = module_0.add_to_line(list_1)
    assert str_6 == " 5M`\t<y; 46(!;8^?2Q'\x0cOW;G:;vC"
    str_7 = module_0.add_to_line(str_4, removed=str_4)
    assert str_7 == ""
