# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import comments as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "#P*k"
    str_1 = "T>>S~W_(B)h\nyuUPM;"
    list_0 = [str_0, str_0, str_1]
    str_2 = module_0.add_to_line(list_0, str_0)
    assert str_2 == " #P*k; T>>S~W_(B)h\nyuUPM;"
    str_3 = "dziE9\rc: y(jd"
    tuple_0 = module_0.parse(str_3)
    str_4 = module_0.add_to_line(str_3, comment_prefix=str_3)
    assert str_4 == "dziE9\rc: y(jd d; z; i; E; 9; \r; c; :;  ; y; (; j"
    list_1 = []
    str_5 = module_0.add_to_line(list_1)
    assert str_5 == ""
    str_6 = ">Kq 'z\n\x0bP/<veR5*Tp0i"
    str_7 = module_0.add_to_line(list_1, str_6, comment_prefix=str_6)
    assert str_7 == ">Kq 'z\n\x0bP/<veR5*Tp0i"
    tuple_1 = module_0.parse(str_3)
    str_8 = 'G#"[q^mdODd\t&VB\t'
    str_9 = module_0.add_to_line(tuple_1, str_3, str_8, tuple_1)
    assert str_9 == "dziE9\rc: y(jd"
    tuple_2 = module_0.parse(str_8)
    none_type_0 = None
    str_10 = module_0.add_to_line(str_3, comment_prefix=none_type_0)
    assert str_10 == "None d; z; i; E; 9; \r; c; :;  ; y; (; j"
    bool_0 = True
    module_0.add_to_line(bool_0)


def test_case_1():
    str_0 = "\n184XB\x0c"
    tuple_0 = module_0.parse(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = ")Izb$A\\h\\u/XJ(8`w#&"
    list_0 = [str_0]
    str_1 = ')?M4"ta!\x0chKZyG5p\n+8'
    str_2 = module_0.add_to_line(list_0, str_1, list_0)
    assert str_2 == ')?M4"ta!\x0chKZyG5p\n+8'
    str_3 = "IX8liiLApngmFJ. ;"
    tuple_0 = module_0.parse(str_3)
    none_type_0 = None
    module_0.parse(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    str_0 = "T*3C+G{1zd\n7o|9-h"
    module_0.add_to_line(object_0, str_0)


def test_case_4():
    list_0 = []
    str_0 = "c&}Fg|@Tz(>7*qq~"
    str_1 = module_0.add_to_line(list_0, comment_prefix=str_0)
    assert str_1 == ""


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -1084
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    str_0 = '@/hUn.q/t8v:D9$"'
    module_0.add_to_line(dict_0, comment_prefix=str_0)


def test_case_6():
    str_0 = "@0z^%\tvFdi"
    str_1 = ":%-CS^tOh#-YG)x"
    str_2 = 'm5S[r]xz}&j7Xj"92F=_'
    str_3 = "#7N8)X YUae-4%"
    str_4 = "vG&4xkC>JO!&\n"
    list_0 = [str_2, str_0, str_3, str_4]
    str_5 = module_0.add_to_line(list_0, removed=str_3)
    assert str_5 == ""
    str_6 = "U>"
    list_1 = [str_0, str_1, str_1, str_6]
    bool_0 = False
    str_7 = module_0.add_to_line(list_1, removed=bool_0)
    assert str_7 == " @0z^%\tvFdi; :%-CS^tOh#-YG)x; U>"
    str_8 = "YlI0DZ[`A"
    str_9 = module_0.add_to_line(str_2)
    assert str_9 == ' m; 5; S; [; r; ]; x; z; }; &; j; 7; X; "; 9; 2; F; =; _'
    tuple_0 = module_0.parse(str_8)
    str_10 = module_0.add_to_line(list_1)
    assert str_10 == " @0z^%\tvFdi; :%-CS^tOh#-YG)x; U>"
