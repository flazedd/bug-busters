# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import comments as module_0


def test_case_0():
    str_0 = "s<1Ew3&#hh]$2\ng|_ "
    tuple_0 = module_0.parse(str_0)


def test_case_1():
    str_0 = " <*zWvz+r$!DZzMj"
    list_0 = [str_0]
    str_1 = module_0.add_to_line(list_0, str_0)
    assert str_1 == " <*zWvz+r$!DZzMj  <*zWvz+r$!DZzMj"


def test_case_2():
    none_type_0 = None
    str_0 = module_0.add_to_line(none_type_0)
    assert str_0 == ""
    str_1 = module_0.add_to_line(none_type_0, removed=none_type_0)
    assert str_1 == ""
    str_2 = "\r8fj-d@GdeJ"
    str_3 = module_0.add_to_line(none_type_0, none_type_0)
    str_4 = module_0.add_to_line(none_type_0, removed=none_type_0, comment_prefix=str_3)
    assert str_4 == ""
    tuple_0 = module_0.parse(str_2)
    bool_0 = True
    str_5 = module_0.add_to_line(none_type_0, str_2, bool_0)
    assert str_5 == "\r8fj-d@GdeJ"


def test_case_3():
    none_type_0 = None
    str_0 = module_0.add_to_line(none_type_0)
    assert str_0 == ""


def test_case_4():
    str_0 = "#:i7;fG=K,4.\\`>>QU`\t"
    none_type_0 = None
    str_1 = module_0.add_to_line(str_0, removed=none_type_0)
    assert str_1 == " #; :; i; 7; ;; f; G; =; K; ,; 4; .; \\; `; >; Q; U; \t"
