# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import comments as module_0


def test_case_0():
    str_0 = "k["
    tuple_0 = module_0.parse(str_0)


def test_case_1():
    bytes_0 = b"\x99\\\xe9\xbe\x8aD\xdb\xf0a\x95\x1b\x82\\\x11\xfb\x8d"
    complex_0 = 2231 + 4480.83784j
    str_0 = ":7"
    str_1 = module_0.add_to_line(bytes_0, removed=complex_0, comment_prefix=str_0)
    assert str_1 == ""


def test_case_2():
    none_type_0 = None
    str_0 = "9H9*T"
    str_1 = module_0.add_to_line(none_type_0, str_0)
    assert str_1 == "9H9*T"


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    str_0 = "U<g"
    tuple_0 = module_0.parse(str_0)
    str_1 = "\x0bT!Re| akA\\d[7n8"
    module_0.add_to_line(dict_0, str_1)


def test_case_4():
    str_0 = "/I$+)@?W}@ "
    str_1 = "Qe9i-$KQ4W"
    str_2 = "?_>)R"
    list_0 = [str_0, str_1, str_2, str_0]
    str_3 = module_0.add_to_line(list_0)
    assert str_3 == " /I$+)@?W}@ ; Qe9i-$KQ4W; ?_>)R"
    str_4 = "\tz |z)aJ,i&"
    tuple_0 = module_0.parse(str_4)
    tuple_1 = module_0.parse(str_4)


def test_case_5():
    str_0 = ""
    tuple_0 = module_0.parse(str_0)
    str_1 = module_0.add_to_line(str_0)
    assert str_1 == ""
    str_2 = module_0.add_to_line(str_1)
    assert str_2 == ""
    str_3 = "|jaQ\x0bwSNp$|"
    str_4 = module_0.add_to_line(tuple_0, str_3)
    assert str_4 == "|jaQ\x0bwSNp$| "
    tuple_1 = module_0.parse(str_4)
    str_5 = "g#QuHQ"
    str_6 = "((X"
    tuple_2 = (str_5, str_6)
    str_7 = module_0.add_to_line(tuple_2, removed=str_6)
    assert str_7 == ""
    str_8 = "[cKlv3#hW70Yv*):C\nH"
    tuple_3 = module_0.parse(str_8)
    str_9 = module_0.add_to_line(str_4, removed=str_6)
    assert str_9 == ""
