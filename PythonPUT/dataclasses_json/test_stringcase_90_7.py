# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import stringcase as module_0
import re as module_1
import builtins as module_2


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.spinalcase(none_type_0)
    assert var_0 == "none"
    var_1 = module_0.capitalcase(none_type_0)
    assert var_1 == "None"
    module_1.sub(none_type_0, var_1, var_1, var_1)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.uplowcase(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0}
    var_0 = module_0.spinalcase(set_0)
    assert var_0 == "{()}"
    bool_0 = False
    var_1 = module_0.pascalcase(bool_0)
    assert var_1 == "False"
    module_1.subn(bool_0, bool_0, bool_0, flags=bool_0)


def test_case_3():
    none_type_0 = None
    var_0 = module_0.snakecase(none_type_0)
    assert var_0 == "none"
    var_1 = module_0.uplowcase(none_type_0, none_type_0)


def test_case_4():
    str_0 = "KH2J\x0b"
    var_0 = module_0.pascalcase(str_0)
    assert var_0 == "KH2J\x0b"
    var_1 = module_0.spinalcase(str_0)
    assert var_1 == "k-h-2-j-"
    var_2 = module_0.capitalcase(var_1)
    assert var_2 == "K-h-2-j-"
    var_3 = module_0.camelcase(str_0)
    assert var_3 == "kH2J\x0b"
    var_4 = module_0.camelcase(var_2)
    assert var_4 == "kH2J-"
    var_5 = module_0.capitalcase(str_0)
    assert var_5 == "KH2J\x0b"
    var_6 = module_0.snakecase(var_5)
    assert var_6 == "k_h_2_j_"
    var_7 = module_0.snakecase(str_0)
    assert var_7 == "k_h_2_j_"
    none_type_0 = None
    with pytest.raises(TypeError):
        var_1.__new__(none_type_0, var_7, none_type_0, none_type_0)


def test_case_5():
    bool_0 = False
    set_0 = {bool_0}
    var_0 = module_0.snakecase(set_0)
    assert var_0 == "{_false}"
    none_type_0 = None
    var_1 = module_0.snakecase(none_type_0)
    assert var_1 == "none"


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -72
    var_0 = module_0.snakecase(int_0)
    assert var_0 == "__7_2"
    var_1 = module_0.camelcase(var_0)
    assert var_1 == "_72"
    var_2 = module_2.Exception()
    var_3 = module_0.pascalcase(var_2)
    assert var_3 == ""
    var_4 = module_0.pascalcase(int_0)
    assert var_4 == "72"
    var_5 = module_0.snakecase(var_4)
    assert var_5 == "7_2"
    module_1.fullmatch(var_4, var_5, int_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ""
    var_0 = module_0.snakecase(str_0)
    assert var_0 == ""
    int_0 = -2581
    module_1.findall(int_0, int_0)
