# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import stringcase as module_0
import re as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.capitalcase(none_type_0)
    assert var_0 == "None"
    var_1 = module_0.capitalcase(none_type_0)
    assert var_1 == "None"


def test_case_1():
    bool_0 = True
    var_0 = module_0.snakecase(bool_0)
    assert var_0 == "true"
    var_1 = module_0.capitalcase(var_0)
    assert var_1 == "True"


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    var_0 = module_0.pascalcase(bool_0)
    assert var_0 == "True"
    var_0.__reversed__(bool_0)


def test_case_3():
    bytes_0 = b"I\xdc\xabmJ\x15\xb8#\xcc\x0f\x19\xcd\xae\x9e\xb9Q\x14\x07\x10H"
    none_type_0 = None
    var_0 = module_0.snakecase(none_type_0)
    assert var_0 == "none"
    var_1 = module_0.camelcase(none_type_0)
    assert var_1 == "none"
    var_2 = module_0.spinalcase(bytes_0)
    assert (
        var_2
        == "b'-i\\xdc\\xabm-j\\x-1-5\\xb-8#\\xcc\\x-0f\\x-1-9\\xcd\\xae\\x-9e\\xb-9-q\\x-1-4\\x-0-7\\x-1-0-h'"
    )
    var_3 = module_0.capitalcase(bytes_0)
    assert (
        var_3
        == "B'I\\xdc\\xabmJ\\x15\\xb8#\\xcc\\x0f\\x19\\xcd\\xae\\x9e\\xb9Q\\x14\\x07\\x10H'"
    )
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    var_4 = module_0.camelcase(dict_0)
    assert (
        var_4
        == "{b'I\\xdc\\xabmJ\\x15\\xb8#\\xcc\\x0f\\x19\\xcd\\xae\\x9e\\xb9Q\\x14\\x07\\x10H':B'I\\xdc\\xabmJ\\x15\\xb8#\\xcc\\x0f\\x19\\xcd\\xae\\x9e\\xb9Q\\x14\\x07\\x10H'}"
    )
    with pytest.raises(TypeError):
        var_3.__contains__(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "r\\.O~3n1F+S'\"=o*u"
    none_type_0 = None
    var_0 = module_0.pascalcase(none_type_0)
    assert var_0 == "None"
    var_1 = module_0.spinalcase(var_0)
    assert var_1 == "none"
    var_0.__setitem__(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "Xt"
    var_0 = module_0.uplowcase(str_0, str_0)
    none_type_0 = None
    var_1 = module_0.pascalcase(none_type_0)
    assert var_1 == "None"
    var_2 = var_0.__dir__()
    module_1.Scanner(var_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = ""
    var_0 = module_0.pascalcase(str_0)
    assert var_0 == ""
    var_1 = module_0.spinalcase(var_0)
    assert var_1 == ""
    module_1.match(var_0, var_0, var_0)
