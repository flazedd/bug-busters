/*
 * This file was automatically generated by EvoSuite
 * Tue May 28 16:39:13 GMT 2024
 */

package fim1_73;

import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class StringEncoder64_ESTest_2 {

    @Test
    public void test00()  throws Throwable  {
        String string0 = StringEncoder64.decodeStringUTF8("#\"z");
        assertEquals("", string0);
    }

    @Test
    public void test01()  throws Throwable  {
        byte[] byteArray0 = new byte[6];
        String string0 = StringEncoder64.encode(byteArray0);
        assertEquals("AAAAAAAA", string0);
    }

    @Test
    public void test02()  throws Throwable  {
        byte[] byteArray0 = StringEncoder64.decode("LyIoU1hBX0c9V0s=");
        // Undeclared exception!
        try {
            StringEncoder64.encode(byteArray0, 0, 544);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch(ArrayIndexOutOfBoundsException e) {
            //
            // 11
            //
//            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test03()  throws Throwable  {
        byte[] byteArray0 = new byte[6];
        String string0 = StringEncoder64.encode(byteArray0, 2, 2);
        assertEquals("AAA=", string0);
    }

    @Test
    public void test04()  throws Throwable  {
        byte[] byteArray0 = new byte[5];
        // Undeclared exception!
        try {
            StringEncoder64.encode(byteArray0, (int) (byte)0, (int) (byte)6);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch(ArrayIndexOutOfBoundsException e) {
            //
            // 5
            //
            ////verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

//    @Test
//    public void test05()  throws Throwable  {
//        byte[] byteArray0 = new byte[4];
//        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
//        boolean boolean0 = StringEncoder64.encode(byteArray0, (int) (byte)1, (int) (byte)47, (OutputStream) pipedOutputStream0);
//        assertFalse(boolean0);
//    }

    @Test
    public void test06()  throws Throwable  {
        byte[] byteArray0 = new byte[55];
        String string0 = StringEncoder64.encode(byteArray0, 1, 1);
        assertEquals("AA==", string0);
    }

    @Test
    public void test07()  throws Throwable  {
        byte[] byteArray0 = new byte[0];
        String string0 = StringEncoder64.encode(byteArray0);
        assertEquals("", string0);
    }

    @Test
    public void test08()  throws Throwable  {
        String string0 = StringEncoder64.decodeStringUTF8("");
        assertEquals("", string0);
    }

    @Test
    public void test09()  throws Throwable  {
        byte[] byteArray0 = StringEncoder64.decode("");
        assertArrayEquals(new byte[] {}, byteArray0);
    }

    @Test
    public void test10()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.encodeStringUTF8((String) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

//    @Test
//    public void test11()  throws Throwable  {
//        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
//        // Undeclared exception!
//        try {
//            StringEncoder64.encode((byte[]) null, (int) (byte)0, 2181, (OutputStream) byteArrayOutputStream0);
//            fail("Expecting exception: NullPointerException");
//
//        } catch(NullPointerException e) {
//            //
//            // no message in exception (getMessage() returned null)
//            //
//            //verifyException("osa.ora.server.utils.StringEncoder64", e);
//        }
//    }

    @Test
    public void test12()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.encode((byte[]) null, 1715, 1715);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test13()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.encode((byte[]) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test14()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decodeStringUTF8((String) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test15()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decode("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", (OutputStream) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

//    @Test
//    public void test16()  throws Throwable  {
//        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
//        try {
//            StringEncoder64.decode("AAAAAA==", (OutputStream) pipedOutputStream0);
//            fail("Expecting exception: IOException");
//
//        } catch(IOException e) {
//            //
//            // Pipe not connected
//            //
//            //verifyException("java.io.PipedOutputStream", e);
//        }
//    }

    @Test
    public void test17()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decode("Br*D*f+G!i7)&");
            fail("Expecting exception: RuntimeException");

        } catch(RuntimeException e) {
            //
            // unexpected code: *
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test18()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decode((String) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

//    @Test
//    public void test19()  throws Throwable  {
//        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("AAA=");
//        StringEncoder64.decode("AAA=", (OutputStream) mockFileOutputStream0);
//    }
//
//    @Test
//    public void test20()  throws Throwable  {
//        File file0 = MockFile.createTempFile("dW58LDY7U0d2ag==", "3;uH7<*)9m S(SQu");
//        MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
//        StringEncoder64.decode("dW58LDY7U0d2ag==", (OutputStream) mockPrintStream0);
//        assertEquals(10L, file0.length());
//    }

    @Test
    public void test21()  throws Throwable  {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 60);
        StringEncoder64.decode("\u0000\u0000\u0000\u0000\u0000\u0000", (OutputStream) bufferedOutputStream0);
    }

    @Test
    public void test22()  throws Throwable  {
        int int0 = StringEncoder64.decode('=');
        assertEquals(0, int0);
    }

    @Test
    public void test23()  throws Throwable  {
        int int0 = StringEncoder64.decode('/');
        assertEquals(63, int0);
    }

    @Test
    public void test24()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decode('~');
            fail("Expecting exception: RuntimeException");

        } catch(RuntimeException e) {
            //
            // unexpected code: ~
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test25()  throws Throwable  {
        int int0 = StringEncoder64.decode('H');
        assertEquals(7, int0);
    }

    @Test
    public void test26()  throws Throwable  {
        int int0 = StringEncoder64.decode('k');
        assertEquals(36, int0);
    }

//    @Test
//    public void test27()  throws Throwable  {
//        byte[] byteArray0 = new byte[6];
//        MockFile mockFile0 = new MockFile("F", "m");
//        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
//        StringEncoder64.encode(byteArray0, 1, 1, (OutputStream) mockFileOutputStream0);
//        assertEquals(4L, mockFile0.length());
//    }
//
//    @Test
//    public void test28()  throws Throwable  {
//        MockFile mockFile0 = new MockFile("=", "dW58LDY7U0d2ag==");
//        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
//        byte[] byteArray0 = new byte[2];
//        // Undeclared exception!
//        try {
//            StringEncoder64.encode(byteArray0, 1, (int) (byte)2, (OutputStream) mockFileOutputStream0);
//            fail("Expecting exception: ArrayIndexOutOfBoundsException");
//
//        } catch(ArrayIndexOutOfBoundsException e) {
//            //
//            // 2
//            //
//            //verifyException("osa.ora.server.utils.StringEncoder64", e);
//        }
//    }

    @Test
    public void test29()  throws Throwable  {
        byte[] byteArray0 = new byte[0];
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        boolean boolean0 = StringEncoder64.encode(byteArray0, (-1), 0, (OutputStream) byteArrayOutputStream0);
        assertTrue(boolean0);
    }

    @Test
    public void test30()  throws Throwable  {
        byte[] byteArray0 = new byte[6];
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = StringEncoder64.encode(byteArray0, (int) (byte)0, (int) (byte)0, stringBuffer0);
        assertEquals("", stringBuffer1.toString());
    }

    @Test
    public void test31()  throws Throwable  {
        byte[] byteArray0 = new byte[0];
        StringBuffer stringBuffer0 = new StringBuffer(1278);
        // Undeclared exception!
        try {
            StringEncoder64.encode(byteArray0, 1, 2, stringBuffer0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch(ArrayIndexOutOfBoundsException e) {
            //
            // 1
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test32()  throws Throwable  {
        byte[] byteArray0 = new byte[6];
        StringBuffer stringBuffer0 = new StringBuffer((byte)0);
        StringEncoder64.encode(byteArray0, (int) (byte)0, 1, stringBuffer0);
        assertEquals("AA==", stringBuffer0.toString());
        assertEquals(4, stringBuffer0.length());
    }

    @Test
    public void test33()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.encode((byte[]) null, 1261, 1261, (StringBuffer) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test34()  throws Throwable  {
        String string0 = StringEncoder64.decodeStringUTF8("tU=MJpJBI\"~C$W3zAL");
        assertEquals("\uFFFD", string0);
    }

    @Test
    public void test35()  throws Throwable  {
        String string0 = StringEncoder64.decodeStringUTF8("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
        assertEquals("\u0000\u0010\uFFFD\u0010Q\uFFFD \uFFFD\uFFFD0\u04CFA\u0014\uFFFDQU\uFFFDa\uFFFD\uFFFDq\u05DF\uFFFD\u0018\uFFFD\uFFFDY\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u06EF\uFFFD\u001C\uFFFD\uFFFD]\uFFFD\u37BB\uFFFD\u07FF", string0);
        assertNotNull(string0);
    }

    @Test
    public void test36()  throws Throwable  {
        int int0 = StringEncoder64.decode('+');
        assertEquals(62, int0);
    }

    @Test
    public void test37()  throws Throwable  {
        int int0 = StringEncoder64.decode('3');
        assertEquals(55, int0);
    }

    @Test
    public void test38()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decode("\"w1V", (OutputStream) null);
            fail("Expecting exception: RuntimeException");

        } catch(RuntimeException e) {
            //
            // unexpected code: \"
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test39()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.decodeStringUTF8("un|,6;SGvj");
            fail("Expecting exception: RuntimeException");

        } catch(RuntimeException e) {
            //
            // unexpected code: |
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test40()  throws Throwable  {
        String string0 = StringEncoder64.encodeStringUTF8("1gZS4]^-:O^");
        assertNotNull(string0);
        assertEquals("MWdaUzRdXi06T14=", string0);
    }

    @Test
    public void test41()  throws Throwable  {
        byte[] byteArray0 = new byte[63];
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        // Undeclared exception!
        try {
            StringEncoder64.encode(byteArray0, (int) (byte)0, 865, (OutputStream) byteArrayOutputStream0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch(ArrayIndexOutOfBoundsException e) {
            //
            // 63
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test42()  throws Throwable  {
        // Undeclared exception!
        try {
            StringEncoder64.encode((byte[]) null, (-1642), (-1642), (OutputStream) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test43()  throws Throwable  {
        byte[] byteArray0 = new byte[0];
        String string0 = StringEncoder64.encode(byteArray0, (-528), (-528));
        assertEquals("", string0);
    }

    @Test
    public void test44()  throws Throwable  {
        byte[] byteArray0 = new byte[2];
        StringBuffer stringBuffer0 = new StringBuffer(49);
        // Undeclared exception!
        try {
            StringEncoder64.encode(byteArray0, (-1), 49, stringBuffer0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch(ArrayIndexOutOfBoundsException e) {
            //
            // -1
            //
            //verifyException("osa.ora.server.utils.StringEncoder64", e);
        }
    }

    @Test
    public void test45()  throws Throwable  {
        String string0 = StringEncoder64.decodeStringUTF8("uexected code: ");
        assertEquals("\uFFFD\uFFFD^r\u05DDr\uFFFD^", string0);
    }

    @Test
    public void test46()  throws Throwable  {
        StringEncoder64 stringEncoder64_0 = new StringEncoder64();
    }

    @Test
    public void test47()  throws Throwable  {
        String string0 = StringEncoder64.encodeStringUTF8("");
        assertEquals("", string0);
    }
}
