/*
 * This file was automatically generated by EvoSuite
 * Tue May 28 16:38:53 GMT 2024
 */

package beanbin_15;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class WildcardSearch_ESTest_2 {

    @Test
    public void test00()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("5&X</}YYX*l~<]Jvp");
        boolean boolean0 = wildcardSearch0.doesMatch("^2}sTIk>ijYa<^_9\"");
        assertFalse(boolean0);
    }

    @Test
    public void test01()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("{NInt2");
        // Undeclared exception!
        try {
            wildcardSearch0.doesMatch("{N");
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch(StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test02()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("5&X</}YYX*l~<]Jvp");
        // Undeclared exception!
        try {
            wildcardSearch0.doesMatch((String) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
        }
    }

    @Test
    public void test03()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("*;");
        boolean boolean0 = wildcardSearch0.doesMatch("msA9#b*T-?h;$7K");
        assertFalse(boolean0);
    }

    @Test
    public void test04()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("|nEbAV8L#X>");
        boolean boolean0 = wildcardSearch0.doesMatch("|nEbAV8L#X>");
        assertTrue(boolean0);
    }

    @Test
    public void test05()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("y^XH*0G]#[]=.E");
        boolean boolean0 = wildcardSearch0.doesMatch(".t'|DMFv");
        assertFalse(boolean0);
    }

    @Test
    public void test06()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("*iL+1?fjz");
        boolean boolean0 = wildcardSearch0.doesMatch("g");
        assertFalse(boolean0);
    }

    @Test
    public void test07()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("*");
        boolean boolean0 = wildcardSearch0.doesMatch("*");
        assertTrue(boolean0);
    }

    @Test
    public void test08()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("y^XH*0G]#[]=.E");
        boolean boolean0 = wildcardSearch0.doesMatch("");
        assertFalse(boolean0);
    }

    @Test
    public void test09()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("");
        boolean boolean0 = wildcardSearch0.doesMatch("P;:ctxr/");
        assertFalse(boolean0);
    }

    @Test
    public void test10()  throws Throwable  {
        WildcardSearch wildcardSearch0 = new WildcardSearch("27Yf=He5R*F*jD");
        boolean boolean0 = wildcardSearch0.doesMatch("27Yf=He5R*F*jD");
        assertTrue(boolean0);
    }
}
