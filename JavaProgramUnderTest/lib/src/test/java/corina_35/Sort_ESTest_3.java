/*
 * This file was automatically generated by EvoSuite
 * Tue May 28 16:38:52 GMT 2024
 */

package corina_35;
import org.junit.jupiter.api.Test;

import java.util.ConcurrentModificationException;
import java.util.List;
import java.util.LinkedList;
import static org.junit.jupiter.api.Assertions.*;

public class Sort_ESTest_3 {

    @Test
    public void test0()  throws Throwable  {
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        List<Integer> list0 = linkedList0.subList(0, 0);
        linkedList0.add((Integer) null);
        // Undeclared exception!
        try {
            Sort.sort(list0, "4kY7h?J;I'OBo.ts8", true);
            fail("Expecting exception: ConcurrentModificationException");

        } catch(ConcurrentModificationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
//            verifyException("java.util.SubList", e);
        }
    }

    @Test
    public void test1()  throws Throwable  {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.add((Object) null);
        // Undeclared exception!
        try {
            Sort.sort((List) linkedList0, (String) null, true);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
//            verifyException("corina.util.Sort", e);
        }
    }

    @Test
    public void test2()  throws Throwable  {
        // Undeclared exception!
        try {
            Sort.sort((List) null, "");
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
//            verifyException("corina.util.Sort", e);
        }
    }

    @Test
    public void test3()  throws Throwable  {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.add((Object) "yYl5(jM7%");
        try {
            Sort.sort((List) linkedList0, "yYl5(jM7%", true);
            fail("Expecting exception: IllegalArgumentException");

        } catch(IllegalArgumentException e) {
            //
            // No such field 'yYl5(jM7% exists in class java.lang.String!
            //
//            verifyException("corina.util.Sort", e);
        }
    }

    @Test
    public void test4()  throws Throwable  {
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        Sort.sort((List) linkedList0, "()'", true);
        assertEquals(0, linkedList0.size());
    }

    @Test
    public void test5()  throws Throwable  {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.add((Object) "yYl5(jM7%");
        try {
            Sort.sort((List) linkedList0, "yYl5(jM7%");
            fail("Expecting exception: IllegalArgumentException");

        } catch(IllegalArgumentException e) {
            //
            // No such field 'yYl5(jM7% exists in class java.lang.String!
            //
//            verifyException("corina.util.Sort", e);
        }
    }

    @Test
    public void test6()  throws Throwable  {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        Sort.sort((List) linkedList0, "yYl5(jM7%");
        assertFalse(linkedList0.contains("yYl5(jM7%"));
    }
}
